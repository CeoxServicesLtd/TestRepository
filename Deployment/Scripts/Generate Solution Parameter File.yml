# Unpack and Refresh Source Control
trigger: none

parameters:
- name: sourceConnectionName
  displayName: 'Source Environment'
  default: Power Platform Dev
  values:
  - Power Platform Dev
- name: solutionName
  displayName: 'Solution Name'
  type: string
  default: AutomatedDeploymentExample
  values:
  - AutomatedDeploymentExample
  - AutomatedDeploymentExample2

pool:
  vmImage: 'windows-latest'

variables:
- name: determinedSolutionName
  value: ${{ parameters.solutionName }}
- name: serviceConnectionUrl
  ${{ if eq(parameters['sourceConnectionName'], 'Power Platform Dev') }}: 
    value: 'https://pembasedev.crm11.dynamics.com/'  

steps:
  - task: PowerPlatformToolInstaller@2
    displayName: "Install Power Platform Tools"
    inputs:
      DefaultVersion: true

  - task: PowerPlatformSetConnectionVariables@2
    displayName: "Get Connection Details for PP Connection"
    name: ConnectionVariables
    inputs:
      authenticationType: 'PowerPlatformSPN'
      PowerPlatformSPN: '${{ parameters.sourceConnectionName }}'

  - task: PowerShell@2
    displayName: 'Set Pac.Exe path' 
    inputs:
      targetType: 'inline'
      script: |
        $pacExePath = $env:POWERPLATFORMTOOLS_PACCLIPATH + "\pac\tools\pac.exe"  
        echo "##vso[task.setvariable variable=PACEXEPATH]$pacExePath"
        
  - task: PowerShell@2
    displayName: 'PAC Auth'
    inputs:
      targetType: 'inline'
      script: |
        $pacCommand = "auth create --url $(serviceConnectionUrl) --applicationId $(ConnectionVariables.BuildTools.ApplicationId) --clientSecret $(ConnectionVariables.BuildTools.ClientSecret) --tenant $(ConnectionVariables.BuildTools.TenantId)"
        Write-Host "Pac command - $(PACEXEPATH) $pacCommand"
        Invoke-Expression -Command "$(PACEXEPATH) $pacCommand"
    
  - task: PowerPlatformExportSolution@2
    displayName: "Export unmanaged version of solution $(determinedSolutionName)"
    inputs:
      authenticationType: 'PowerPlatformSPN'
      PowerPlatformSPN: '${{ parameters.sourceConnectionName }}'
      SolutionName: '$(determinedSolutionName)'
      SolutionOutputFile: '$(Build.ArtifactStagingDirectory)\$(determinedSolutionName).zip'
      Managed: false
      MaxAsyncWaitTime: 120

  - task: CmdLine@2
    displayName: "Generate Parameter File"
    inputs:
      script: '$(PACEXEPATH) solution create-settings --solution-zip "$(Build.ArtifactStagingDirectory)\$(determinedSolutionName).zip" --settings-file "$(Build.ArtifactStagingDirectory)\ParameterFile\$(determinedSolutionName).json"'

  - publish: "$(Build.ArtifactStagingDirectory)/ParameterFile"
    displayName: "Parameter File Publish"
    artifact: ParameterFile   
