name: PowerApps Solution Source Control Refresh Steps

on:
  workflow_call:
    inputs:
      solutionName:
        required: true
        type: string
      checkParameterFile:
        required: true
        type: boolean
      serviceConnectionUrl:
        required: true
        type: string
      applicationId:
        required: true
        type: string      
        
jobs:
  PowerApps-Solution-Source-Control-Refresh-Steps:
    runs-on: windows-latest
    steps:

    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: powerplatform-actions             
      uses: microsoft/powerplatform-actions/actions-install@v1

    - name: Add pac to PATH
      shell: pwsh
      run: |
        $pac = (Get-Item "$env:POWERPLATFORMTOOLS_PACPATH").Directory.FullName;
        "$pac" | Out-File -FilePath $env:GITHUB_PATH -Append      

    - name: Get the current date in UTC
      run: echo "CURRENT_DATE=$(TZ=UTC date +'%Y%m%d')" >> $GITHUB_ENV

    - name: Update solution version            
      uses: microsoft/powerplatform-actions/set-online-solution-version@v1
      with:
         environment-url: ${{ inputs.serviceConnectionUrl }}
         app-id: ${{ inputs.applicationId }} 
         client-secret: ${{ secrets.DEVAPPLICATIONSECRET }}
         tenant-id: ${{ secrets.TENANTID }}
         version: 1.0.${{ env.CURRENT_DATE }}.${{ github.run_number }}
         name: ${{ inputs.solutionName }}

    - name: Export unmanaged version of solution 
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
         environment-url: ${{ inputs.serviceConnectionUrl }}
         app-id: ${{ inputs.applicationId }} 
         client-secret: ${{ secrets.DEVAPPLICATIONSECRET }}
         tenant-id: ${{ secrets.TENANTID }}
         solution-name: ${{ inputs.solutionName }}
         solution-output-file: ${{ runner.temp }}\${{ inputs.solutionName }}.zip

    - name: Generate Comparison Parameter File
      if:  ${{ inputs.checkParameterFile }} == true
      shell: cmd
      run: |
        pac solution create-settings --solution-zip "${{ runner.temp }}\${{ inputs.solutionName }}.zip" --settings-file "${{ runner.temp }}\${{ inputs.solutionName }}.json"

    - name: Compare Parameter Files 
      if:  ${{ inputs.checkParameterFile }} == true    
      shell: pwsh
      run: |      
          $sourceFile = Get-Content -Path "${{ runner.temp }}\${{ inputs.solutionName }}.json"
          $targetFile = Get-Content -Path ".\Deployment\Solution Parameter Files\Reference Files\${{ inputs.solutionName }}.json"
          
          if(Compare-Object $sourceFile $targetFile)
          {
            throw "Parameter files are different; confirm parameter files are up-to-date"
          }         

    - name: Export Managed version of solution 
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
         environment-url: ${{ inputs.serviceConnectionUrl }}
         app-id: ${{ inputs.applicationId }} 
         client-secret: ${{ secrets.DEVAPPLICATIONSECRET }}
         tenant-id: ${{ secrets.TENANTID }}
         solution-name: ${{ inputs.solutionName }}
         solution-output-file: ${{ runner.temp }}\${{ inputs.solutionName }}_Managed.zip      
         managed: true
  
    - name: Unpack solution 
      uses: microsoft/powerplatform-actions/unpack-solution@v1
      with:
         solution-type: both
         solution-file: ${{ runner.temp }}\${{ inputs.solutionName }}.zip
         solution-folder:  ${{ github.workspace }}\Solutions\${{ inputs.solutionName }}

    - name: Git Fetch and Commit 
      run: |
        git fetch --all  
        git config --global user.email "no-reply@github.com"
        git config --global user.name "GitHub Actions"
        git checkout main
        git add --all 
        git commit -m "Updates from the dev environment"
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        git push

